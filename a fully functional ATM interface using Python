# Online Python compiler (interpreter) to run Python online.
# Write Python 3 code in this online editor and run it.
import getpass

class ATM:
    def __init__(self):
        self.accounts = {
            '123456': {'pin': '1234', 'balance': 1000},
            '654321': {'pin': '4321', 'balance': 2000},
        }
        self.current_account = None

    def authenticate(self):
        account_number = input("Enter account number: ")
        pin = getpass.getpass("Enter PIN: ")

        if account_number in self.accounts and self.accounts[account_number]['pin'] == pin:
            self.current_account = account_number
            print("Authentication successful!")
            return True
        else:
            print("Authentication failed. Please check your account number and PIN.")
            return False

    def check_balance(self):
        if self.current_account:
            balance = self.accounts[self.current_account]['balance']
            print(f"Your balance is: ${balance:.2f}")
        else:
            print("Please authenticate first.")

    def withdraw(self):
        if self.current_account:
            try:
                amount = float(input("Enter amount to withdraw: $"))
                if amount <= 0:
                    print("Amount must be positive.")
                    return
                if amount > self.accounts[self.current_account]['balance']:
                    print("Insufficient funds.")
                    return
                self.accounts[self.current_account]['balance'] -= amount
                print(f"Withdrew ${amount:.2f}. New balance: ${self.accounts[self.current_account]['balance']:.2f}")
            except ValueError:
                print("Invalid amount. Please enter a number.")
        else:
            print("Please authenticate first.")

    def deposit(self):
        if self.current_account:
            try:
                amount = float(input("Enter amount to deposit: $"))
                if amount <= 0:
                    print("Amount must be positive.")
                    return
                self.accounts[self.current_account]['balance'] += amount
                print(f"Deposited ${amount:.2f}. New balance: ${self.accounts[self.current_account]['balance']:.2f}")
            except ValueError:
                print("Invalid amount. Please enter a number.")
        else:
            print("Please authenticate first.")

    def exit(self):
        print("Thank you for using the ATM. Goodbye!")
        exit()

    def menu(self):
        while True:
            print("\nATM Menu:")
            print("1. Check Balance")
            print("2. Withdraw")
            print("3. Deposit")
            print("4. Exit")

            choice = input("Select an option (1-4): ")
            if choice == '1':
                self.check_balance()
            elif choice == '2':
                self.withdraw()
            elif choice == '3':
                self.deposit()
            elif choice == '4':
                self.exit()
            else:
                print("Invalid choice. Please select a valid option.")

def main():
    atm = ATM()
    if atm.authenticate():
        atm.menu()

if __name__ == "__main__":
    main()
